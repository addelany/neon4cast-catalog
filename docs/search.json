[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Description of dataset derived from JSON STAC files goes here\n\nThis material is based upon work supported by the National Science Foundation under Grants DEB-1926388 and OAC-2209866. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation."
  },
  {
    "objectID": "aquatics-catalog.html",
    "href": "aquatics-catalog.html",
    "title": "Aquatics",
    "section": "",
    "text": "Description of dataset\n\nDetailsNotebook\n\n\n\nhome_dir <- '/home/rstudio/neon4cast-catalog'#here::here()\nsetwd(home_dir)\ncollection <- jsonlite::read_json(\"https://github.com/addelany/neon4cast-catalog/raw/main/output.json\")\n#collection <- jsonlite::read_json(\"output.json\")\n\nTitle: Ecological Forecasting Initiative - Aquatics Forecasts\nDataset Description: description placeholder\nKeywords: Forecasting, Data, Ecology\nSpatial Extent: -149.6106, 18.1135, -66.7987, 68.6698\nTemporal Extent: 2020-09-01, 2023-04-11\nSTAC collection: https://stac-extensions.github.io/scientific/v1.0.0/schema.json, https://stac-extensions.github.io/item-assets/v1.0.0/schema.json, https://stac-extensions.github.io/table/v1.2.0/schema.json\nPublication:\n\n## Publications\npub_doi <- c()\npub_cite <- c()\n\nfor (i in seq.int(1, length(collection$publications))){\n  pub_doi[i] <- collection$publications[[i]]$doi\n  pub_cite[i] <- collection$publications[[i]]$citation\n}\n\npub_df <- data.frame(pub_doi,\n                    pub_cite)\n\npub_table <- reactable::reactable(pub_df,\n                           defaultColDef = colDef(\n                             align = \"left\"),\n                           columns = list(pub_doi = colDef(name='DOI'),\n                                          pub_cite = colDef(name='Citation')),\n                           defaultPageSize = 10,\n                           filterable = FALSE,\n                           highlight = TRUE)\n\npub_table\n\n\n\n\n\n\nProviders:\n\nfor (i in seq.int(1, length(collection$providers))){\n  print(i)\n  provider_info <- c(collection$providers[[i]]$name, collection$providers[[i]]$url, c(unlist(collection$providers[[i]]$roles)))\n  print(provider_info)\n}\n\nLicense: proprietary\nSTAC version: 1.0.0\nColumns\n\n## COLUMNS\ncollection$table_columns\n\ntc_name <- c()\ntc_type <- c()\ntc_description <- c()\n\nfor (i in seq.int(1, length(collection$table_columns))){\n  tc_name[i] <- collection$table_columns[[i]]$name\n  tc_type[i] <- collection$table_columns[[i]]$type\n  tc_description[i] <- collection$table_columns[[i]]$description\n}\n\ntc_df <- data.frame(tc_name,\n                    tc_description,\n                    tc_type)\n\ncolumns_table <- reactable(tc_df,\n                         defaultColDef = colDef(\n                           align = \"left\"),\n                         columns = list(tc_name = colDef(name='Name'),\n                                        tc_description = colDef(name='Description'),\n                                        tc_type = colDef(name = 'Type')),\n                         defaultPageSize = 10,\n                         filterable = FALSE,\n                         highlight = TRUE)\n\ncolumns_table\n\n\n\n\n\n\nBinder\n\n\n\n\n\n\ns3 <- arrow::s3_bucket(\"neon4cast-forecasts/parquet/aquatics/model_id=flareGLM/reference_datetime=2023-02-24\", \n                       endpoint_override = \"data.ecoforecast.org\",\n                       anonymous = TRUE)\n\nd <- arrow::open_dataset(s3) |> collect()\n\n\nd |> \n  filter(site_id == \"BARC\",\n         variable == \"temperature\") |> \n  ggplot(aes(x = datetime, y = prediction, group = parameter)) +\n  geom_line()\n\n\n\n\nAssets The data contain the following assets:\n\n## assets\n\nasset_title <- c()\nasset_href <- c()\nasset_type <- c()\nasset_roles <- c()\nasset_description <- c()\n\nfor (i in seq.int(1,length(list(collection$assets$parquet_items)))){ ## this needs to be converted to list before this step (do in build_collection)\n  asset_title[i] <- list(collection$assets$parquet_items)[[i]]$title\n  asset_href[i] <- list(collection$assets$parquet_items)[[i]]$href\n  asset_type[i] <- list(collection$assets$parquet_items)[[i]]$type\n  asset_roles[i] <- list(collection$assets$parquet_items)[[i]]$roles[[1]]\n  asset_description[i] <- list(collection$assets$parquet_items)[[i]]$description\n\n}\n\nasset_df <- data.frame(asset_title,\n                       asset_href,\n                       asset_type,\n                       asset_roles,\n                       asset_description)\n\nasset_table <- reactable(asset_df,\n                      defaultColDef = colDef(\n                        align = \"left\"),\n                      columns = list(asset_title = colDef(name='Title'),\n                                     asset_href = colDef(name='Href'),\n                                     asset_type = colDef(name = 'Type'),\n                                     asset_roles = colDef(name = 'Roles'),\n                                     asset_description = colDef(name = 'description')),\n                      defaultPageSize = 10,\n                      filterable = FALSE,\n                      highlight = TRUE)\n\nasset_table"
  }
]